#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_36keys.h"


#define DEF 0
#define LOWER 1
#define RAISE 2

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LALT))

#define U_RDO LS(LG(Z))
#define U_PST LG(V)
#define U_CPY LG(C)
#define U_CUT LG(X)
#define U_UND LG(Z)

#define TAPPING_TERM_MS 280
#define QUICK_TAP_MS 175
#define GLOBAL_QUICK_TAP_MS 150


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};


/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <20>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };
        combo_dash {
            timeout-ms = <20>;
            key-positions = <16 17>;
            bindings = <&kp MINUS>;
        };
        combo_underscore {
            timeout-ms = <20>;
            key-positions = <17 18>;
            bindings = <&kp UNDERSCORE>;
        };
        combo_colon {
            timeout-ms = <20>;
            key-positions = <16 18>;
            bindings = <&kp COLON>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};


/ {
    macros {
      pastey: pastey {
        compatible = "zmk,behavior-macro";
        label = "PASTEY";
        #binding-cells = <0>;
        bindings
          = <&macro_tap &kp K_PASTE>
          , <&macro_tap &kp RET>
          ;
      };

      ra: right_arrow {
        compatible = "zmk,behavior-macro";
        label = "RIGHT_ARROW";
        #binding-cells = <0>;
        bindings
          = <&macro_tap &kp MINUS>
          , <&macro_tap &kp GT>
          , <&macro_tap &kp SPACE>
          ;
      };
      prompt: prompt {
        compatible = "zmk,behavior-macro";
        label = "PROMPT";
        #binding-cells = <0>;
        bindings
          = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>
          , <&macro_press &kp LSHIFT>
          , <&macro_tap &kp RET &kp RET>
          , <&macro_release &kp LSHIFT>
          , <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>
          , <&macro-tap &kp UP>
          ;
      };
    };

    behaviors {
      lh_pht: left_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_POSITIONAL_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <TAPPING_TERM_MS>;
        quick-tap-ms = <QUICK_TAP_MS>;
        flavor = "balanced";
        global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_R THUMBS>;
        hold-trigger-on-release;
      };
      rh_pht: right_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_POSITIONAL_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <TAPPING_TERM_MS>;
        quick-tap-ms = <QUICK_TAP_MS>;
        flavor = "balanced";
        global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_L THUMBS>;
        hold-trigger-on-release;
      };

      tdv: tap_dance_v {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_V";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp V>, <&pastey>;
      };

      quote: mod_morph_quote {
        compatible = "zmk,behavior-mod-morph";
        label = "MOD_MORPH_QUOTE";
        #binding-cells = <0>;
        bindings = <&kp SQT>, <&kp GRAVE>;
        mods = <(MOD_LCTL)>;
      };

      slash: mod_morph_slash {
        compatible = "zmk,behavior-mod-morph";
        label = "MOD_MORPH_SLASH";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp EXCL>;
        mods = <(MOD_LCTL)>;
      };
      comma_morph: mod_morph_comma {
        compatible = "zmk,behavior-mod-morph";
        label = "MOD_MORPH_COMMA";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMI>;
        mods = <(MOD_LSFT)>;
      };
      dot_morph: mod_morph_dot {
        compatible = "zmk,behavior-mod-morph";
        label = "MOD_MORPH_DOT";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp COLON>;
        mods = <(MOD_LSFT)>;
      };
    };
    

    keymap {
      compatible = "zmk,keymap";

      default_layer {
        label = "UwU";
        bindings = <
          &kp Q           &kp W           &kp F           &kp P           &kp B     &kp J &kp L           &kp U           &kp Y           &quote
          &lh_pht LSHFT A &lh_pht LCTRL R &lh_pht LALT S  &lh_pht LGUI T  &kp G     &kp M &rh_pht RGUI N  &rh_pht RALT E  &rh_pht RCTRL I &rh_pht RSHFT O
          &kp Z           &kp X           &kp C           &kp D           &tdv      &kp K &kp H           &comma_morph    &dot_morph      &slash
                          &kp HYPER &kp TAB &lt RAISE SPACE                         &lt LOWER BKSP &kp RET &kp MEH
        >;
      };

      lower_layer {
        label = "lower";
        bindings = <
          &prompt     &kp STAR     &kp LBRC  &kp RBRC &trans           &trans      &kp AMPS  &kp PIPE        &kp PLUS          &kp GRAVE
          &kp TILDE   &kp PERCENT  &kp LPAR  &kp RPAR &kp CARET        &kp DOLLAR  &kp MINUS &kp UNDER       &kp HASH          &kp EQUAL 
          &kp BSLH    &trans       &kp LBKT  &kp RBKT &trans           &trans      &kp AT    &kp LESS_THAN   &kp GREATER_THAN  &caps_word
                    &trans      &trans    &trans                                &trans    &trans    &trans 
        >;
      };

      raise_layer {
        label = "raise";
        bindings = <
          &trans   &kp N7  &kp N8  &kp N9  &trans                &kp U_RDO  &kp U_PST   &kp U_CPY    &kp U_CUT  &kp U_UND
          &kp ESC  &kp N4  &kp N5  &kp N6  &trans                &trans     &kp LEFT    &kp DOWN     &kp UP     &kp RIGHT
          &kp N0   &kp N1  &kp N2  &kp N3  &trans                &trans     &kp HOME    &kp PG_DN    &kp PG_UP  &kp END 
                    &trans  &trans  &trans                                  &kp DEL      &trans      &trans 
        >;
      };

      adjust_layer {
        label = "adjust";
        bindings = <
          &kp F12  &kp F7 &kp F8 &kp F9 &trans                &trans  &bt BT_PRV  &bt BT_NXT  &trans &bt BT_CLR 
          &kp F11  &kp F4 &kp F5 &kp F6 &trans               &trans &trans &trans &trans &trans 
          &kp F10  &kp F1 &kp F2 &kp F3 &trans               &trans &trans &trans &trans &trans 
                    &trans  &trans  &trans                                  &trans      &trans      &trans 
        >;
      };
  };
};