#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LALT))

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};


/ {
    macros {
      pastey: pastey {
        compatible = "zmk,behavior-macro";
        label = "PASTEY";
        #binding-cells = <0>;
        bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp V>
          , <&macro_release &kp LGUI>
          , <&macro_tap &kp RET>
          ;
      };

      left_arrow: left_arrow {
        compatible = "zmk, behavior-macro";
        label = "->";
        #binding-cells = <0>;
        bindings
          = <&macro_tap &kp MINUS>
          , <&macro_tap &kp GT>
          ;
      };
    };

    behaviors {
      lh_pht: left_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_POSITIONAL_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <150>;
        flavor = "balanced";
        global-quick-tap;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
        hold-trigger-on-release;
      };
      rh_pht: riht_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_POSITIONAL_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <150>;
        flavor = "balanced";
        global-quick-tap;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;
        hold-trigger-on-release;
      };

      tdq: tap_dance_q {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_Q";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp Q>, <&kp ESC>;
      };

      tdv: tap_dance_v {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_V";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp V>, <&pastey>;
      };
    };


    keymap {
      compatible = "zmk,keymap";

      default_layer {
        label = "UwU";
        bindings = <
          &tdq        &kp W       &kp F       &kp P       &kp B     &kp J &kp L       &kp U       &kp Y       &kp SQT
          &lh_pht LSHFT A &lh_pht LCTRL R  &lh_pht LALT S  &lh_pht LGUI T &kp G     &kp M &rh_pht RGUI N  &rh_pht RALT E  &rh_pht RCTRL I &rh_pht RSHFT O
          &kp Z       &kp X       &kp C       &kp D       &tdv     &kp K &kp H       &kp COMMA   &kp DOT     &kp FSLH
                      &kp HYPER &kp TAB &lt 1 SPACE                       &lt 2 BKSP &kp RET &kp MEH
        >;
      };

      lower_layer {
        label = "lower";
        bindings = <
          &kp GRAVE &kp PERCENT &kp LBRC  &kp RBRC &trans           &trans      &kp AMPS  &kp PIPE  &kp HASH  &kp SEMI
          &kp ESC &kp BSLH    &kp LPAR  &kp RPAR &kp CARET        &kp DOLLAR  &kp MINUS &kp COLON &kp UNDER &kp EQUAL 
          &kp TILDE &trans      &kp LBKT  &kp RBKT &trans           &trans      &kp EXCL  &kp AT    &left_arrow    &caps_word
                    &trans      &trans    &trans                                &trans    &trans    &trans 
        >;
      };

      raise_layer {
        label = "raise";
        bindings = <
          &kp FSLH  &kp N7  &kp N8  &kp N9  &kp STAR               &trans  &bt BT_PRV &bt BT_NXT &trans &bt BT_CLR 
          &kp N0    &kp N4  &kp N5  &kp N6  &kp PLUS               &trans  &kp LEFT  &kp DOWN  &kp UP &kp RIGHT
          &kp EQUAL &kp N1  &kp N2  &kp N3  &kp MINUS                &trans  &trans    &trans    &trans &trans 
                    &trans  &trans  &trans                                  &trans    &trans    &trans 
        >;
      };
  };
};